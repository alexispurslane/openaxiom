#+TITLE: Player Characters: Properties, Creation, Inventory, Statuses, and Advancement
#+OPTIONS: H:6
#+ATTR_HTML: :class section-icon
[[file:player_characters.svg]]

This section describes what player characters are in OpenAxiom and how to create them. Player characters are defined by skills and traits rather than character classes or traditional attributes. This approach allows for flexible and organic character development, enabling players to build unique individuals. The rules presented here guide the player through each step of character definition, from initial concept to fully-realized character.

* Biography
:PROPERTIES:
:ID:       7E638FC9-096D-4AF5-AE5C-7C5B9219D898
:END:

#+ATTR_HTML: :class section-icon
[[file:biography.svg]]

Every character has a biography. This biography consists of two freeform fields: Appearance and History. These descriptions are crucial for defining a character's identity. Players should carefully consider their character's appearance and history when selecting skills and traits. The biography helps to ensure a character's mechanical representation aligns with their narrative concept.

** Appearance
:PROPERTIES:
:ID:       0B9A64E3-7CA9-40A6-9E0F-F9898CC59707
:END:

This field describes what a character looks like. It covers physical features, clothing, and any other visual characteristics. An appearance description can suggest certain skills or traits. For example, a character described as "exceptionally tall and gaunt" might have a high skill in *Stealth* or a trait representing *Frail Constitution*. A "heavily muscled individual with calloused hands" might have high *Strength* or a trait for *Powerful Build*.

** History
:PROPERTIES:
:ID:       3D684FED-E0D2-45A6-A12E-062778E76CD0
:END:

This field outlines a character's past experiences and background. It can include significant life events, training, or personal struggles. A character's history directly informs their skill and trait selection. For example, a "former deep-space miner" might have high *Piloting (Mining Vessels)* or a trait for *Claustrophobia*. A "childhood spent studying ancient languages" could lead to high *Linguistics* or a trait for *Bookish*.

* Skills
:PROPERTIES:
:ID:       E3FCEF0A-7B8E-4D04-91C6-C102596609E9
:END:

#+ATTR_HTML: :class section-icon
[[file:skills.svg]]

A skill represents anything a character can do or be. This includes physical abilities like strength or swimming, and mental aptitudes such as various forms of intelligence. Skills are trainable, meaning a character's proficiency can improve over time. Any skill not explicitly listed on a character's sheet has the default value. Skills have a name and a numerical value, indicating proficiency.

** Skill Naming and Hierarchy
:PROPERTIES:
:ID:       331342AE-8DFA-4E8E-9C65-D94047C640E4
:END:

Skills are named to reflect their scope and specialization. Skills can be organized into a hierarchical tree. A general skill can have more specific versions. The naming format for specific skills uses parentheses. For example, a general skill like *Piloting* can have a more specific version like *Piloting (Starship)*. This can extend further, such as *Piloting (Starship) (Freighter)*. The game master determines the specific skills that exist in a game world, although players can suggest new skills, or new specializations of skills, as long as the GM agrees.

When a character attempts a task requiring a specific skill the character does not possess, the character can use a more general skill from the same hierarchy. However, using a general skill for a more specific task incurs a disadvantage. A character using a general skill for a more specific skill suffers a -1 disadvantage for each level of specialization their more general skill is missing. For example, using *Piloting* for a *Piloting (Starship)* task incurs a -1 disadvantage, while using *Piloting* for a *Piloting (Starship) (Freighter)* task incurs a -2 disadvantage. Rule of thumb: count the number of parenthesized expressions to see what the disadvantage should be.

** Skill Proficiency Value
:PROPERTIES:
:ID:       41334204-2F08-4273-B7FA-FDC34DE4A68F
:END:

Each skill has a numerical value that indicates the character's level of proficiency. A higher number signifies greater ability. The default value for any general, non-specific skill (such as *Strength* or *Piloting*) is 9.

For the purposes of using skills, specific skills are undefined by default and relay up to more general skills as described in the previous section. However, for the purpose of selecting specific skills during character creation, they default to 9 and are bumped to 10 when you select them and add the +1 bonus as normal, and then considered defined and can be used directly.

This lower default value means that even characters with world-class traits will not be exceptionally skilled without training. Talent isn't everything - characters also need to put in the blood, sweat, and tears of practice to truly excel.

With 3d6 the chance to roll ≤ 9 is 37.50%.

A +5 trait applied to that same untrained skill is still only 9 + 5 = 14 (90.74%).

In other words, a so-called "world-class innate gift" merely pushes you from average to very good unless you also put in the training time and Story Points.

The following table provides a qualitative evaluation of skill levels based on the probability of success for tasks of average difficulty:

| Skill Range | Probability Range (≤ Value) | Qualitative Level | In-Game Meaning |
|-------------|-----------------------------|-------------------|-----------------|
| 3-5 | 0.46% - 4.63% | Hopeless | Character has virtually no chance of success. Tasks feel impossible. |
| 6-7 | 9.26% - 16.20% | Very Poor | Minimal capability. Success requires extraordinary luck. |
| 8 | 25.93% | Poor | Below average capability. Frequent failures even on simple tasks. |
| 9-10 | 37.50% - 50.00% | Average | Baseline human capability. Modest chance of success on routine tasks. |
| 11-12 | 62.50% - 74.07% | Good | Reliable performance. Succeeds more often than fails on standard tasks. |
| 13-14 | 83.80% - 90.74% | Very Good | Skilled practitioner. Rarely fails at standard tasks. |
| 15-16 | 95.37% - 98.15% | Excellent | Highly specialized mastery. Failure is exceptional. |
| 17 | 99.54% | Masterful | Virtually flawless. Represents pinnacle of human capability. |
| 18 | 100.00% | Legendary | Automatic success. Character cannot fail under normal conditions. |

Note that these probabilities and qualitative levels apply to tasks of average difficulty. Tasks that are easier or harder than average will have correspondingly higher or lower success probabilities. A skill of 18 still represents the pinnacle of human capability rather than supernatural power.

** Initial Skill Selection
:PROPERTIES:
:ID:       EA58C73B-5613-40B4-BB9E-70A1207743A1
:END:

Since OpenAxiom does not use a point pool, and does not requiring trading some skills off against others. Instead, players can choose different five skills to add a +1 bonus to, each. These are their main, or "activated" skills, the skills unique to their character. To be clear: players can not add multiple bonuses to a single skill.

Players may choose specific skills without choosing the more general version. For example, a character can have *Piloting (Starship)* without having *Piloting*. When a character has a specific skill but not its more general version, they can only use that specific skill for tasks that match it exactly. They cannot use it as a substitute for other specializations of the same general skill.

** Skill Examples
:PROPERTIES:
:ID:       BB8F9C54-4E34-4B80-9705-607D67F5FC0B
:END:

Here are some examples of skills, demonstrating their breadth across various activities and genres:
- *Piloting (Starship)*
- *Languages (Ancient) (Hieroglyphs)*
- *Combat (Melee) (Sword)*
- *Computers (Hacking)*
- *Social (Diplomacy) (Negotiation)*
- *Survival (Wilderness) (Forest)*
- *Engineering (Robotics)*
- *Medicine (First Aid)*
- *Art (Painting)*
- *Physical (Strength) (Lifting)*

* Traits
:PROPERTIES:
:ID:       D68D646F-2540-4F24-BDCA-843E04C814B9
:END:

#+ATTR_HTML: :class section-icon
[[file:traits.svg]]

A trait is a passive effect. Traits modify a character's skills. Traits represent inherent advantages or disadvantages a character possesses. Traits are established during character creation. Traits cannot be trained or improved. Traits serve as a starting point for a character's inherent abilities.

** Trait Value
:PROPERTIES:
:ID:       A93E7E8F-9A0D-40DA-AAF2-D23E80AFAEFE
:END:

Each trait is inherently either positive (a boost) or negative (a hindrance). During character creation, the player chooses a numerical value for the trait, which determines the trait's effect on skills.

For positive traits, the player chooses a positive value (e.g., from +1 to +5). This value is the bonus applied to affected skills.

For negative traits, the player chooses a negative value (e.g., from -1 to -5). This value is the penalty applied to affected skills.

*Warning:* Game Masters should be aware that extreme trait values like +5 or -5 represent a 50% swing in success rates, which can have a massive effect on characters. Players are strongly encouraged to talk to their GMs before taking any such extreme traits to ensure they fit the campaign and won't unbalance the game.

** How Traits Apply
:PROPERTIES:
:ID:       ABFA5B7F-EF09-4341-994C-5318B55AA172
:END:

Each trait is associated with a specific list of skills that it effects. When a trait affects a skill, its effect applies to all skills hierarchically subordinate to that skill.

If multiple traits affect the same skill, only the highest bonus and the highest penalty are applied. This prevents skill values from becoming unbalanced, as bonuses would otherwise stack and quickly become excessive.

Traits are categorized based on how they affect skills. Understanding these categories helps players and Game Masters determine when and how traits apply during gameplay, and *these categories should be noted in any trait definition*, alongside the skills the category requires the trait to effect.

*** Broad Traits

Broad traits affect one or more top-level general skill categories. These traits have wide-ranging effects across many related skills. For example, a *Natural Leader* trait might affect the entire *Social* skill category, providing bonuses to *Social (Diplomacy)*, *Social (Command)*, *Social (Intimidation)*, and any other skills that fall under the *Social* umbrella.

*** Narrow Traits

Narrow traits affect one or more first-level specialized skills. These traits have more focused effects on specific areas of expertise. For example, *Perfect Pitch* affects *Art (Music)* specifically, rather than all *Art* skills. Similarly, *Keen Eyesight* might affect *Perception (Visual)* but not other perception skills.

*** Situational Traits

Situational traits can be either broad or narrow but only activate under specific conditions defined by the trait. For example, *Night Vision* is a narrow situational trait that only applies to perception skills when in low-light conditions. *Cold Tolerance* might be a broad situational trait that affects all physical skills but only in freezing environments. The Game Master determines when situational traits activate based on the narrative circumstances.

*** Special Traits

Traits can also be designated as "Special" traits. These traits introduce simple new rules that layer on top of, but do not replace, core game mechanics. Like the way cards in some deck-building games introduce custom rules, Special traits add unique mechanical effects to a character that go beyond simple skill bonuses or penalties. For example, a *Second Wind* trait might allow a character to recover some health once per session, or a *Lucky Charm* trait might allow rerolling a failed skill check once per game session.

IMPORTANT: Even Game Masters should refrain from introducing custom Special traits, and should strongly discourage players from doing so. Generally, the community-provided trait packs should be relied upon for such things, to avoid hashing out game balance at the gaming table. Custom Special traits can unintentionally break game balance or create mechanical complications that are difficult to resolve during play. When in doubt, stick to the official trait packs provided by the OpenAxiom community.

** Trait Naming
:PROPERTIES:
:ID:       F0B9DBBD-92C5-4927-910F-D435DC595E3F
:END:

Traits are identified by a descriptive name. An example is *Perfect Pitch*.

** Standard Trait Definition Format
:PROPERTIES:
:ID:       7394B52A-CF34-4512-BEC4-1FFC4AB7E730
:END:

When defining traits, use the following standardized format to ensure clarity and consistency. This format should be used for all traits, whether they are from official trait packs or custom creations.

#+ATTR_HTML: :class trait-definition
| Trait Name | Category |
|------------|----------|
| Skills Affected       | [List of skills affected by this trait] |
| Effect                | [Description of the mechanical effect of this trait] |

Example:

#+ATTR_HTML: :class trait-definition
| Natural Leader | Broad |
|----------------|-------|
| Skills Affected        | Social |
| Effect                 | Provides a bonus to all social interaction skills. |

Special traits that modify the core rules may have multiple categories:

#+ATTR_HTML: :class trait-definition
| Lucky Charm | Broad, Special |
|-------------|-----------------|
| Skills Affected              | All skills |
| Effect                       | Once per session, the character may reroll any failed skill check. |

** Trait Selection
:PROPERTIES:
:ID:       F18E6B88-ACAD-45C5-8232-D7C7237CD7E6
:END:

During character creation, players may choose up to three positive traits and up to three negative traits. The total value of all chosen positive traits must equal the absolute value of all chosen negative traits, ensuring the character is balanced and interesting. For example, if a player chooses positive traits with values of +3 and +2, they must also choose negative traits with values that sum to -5 (such as -5, or -3 and -2).

Each chosen trait must be justified by a one-sentence appeal to the character's Appearance and History sections. The Game Master must approve this justification.

** Traits and Lore Items
:PROPERTIES:
:ID:       B67FDE9E-C707-4900-B05D-328421028608
:END:

Some traits may come with associated lore items that a character must carry with them as a result of having that trait. These items are typically Small or Medium in size and don't confer mechanical advantages beyond what the trait itself provides. For example, a character with the *Photographic Memory* trait might carry a cybernetic implant, or a character with *Night Vision* might have special eye drops or wear tinted glasses. These items are considered part of the character's backstory and serve to reinforce the narrative justification for the trait.

Lore items associated with traits are automatically provided to characters during character creation and do not count against their inventory slot limits. However, they can be lost or damaged during play, potentially affecting the character's ability to use their trait effectively until the item is replaced.

** Trait Evolution and Modification
:PROPERTIES:
:ID:       3F9E1A73-0CD5-4D31-8281-E1CF1341AA40
:END:

Traits represent a character's inherent nature and are generally stable over time. However, they are not completely immutable. Through dedicated effort and significant personal growth, characters can modify their traits over time.

Negative traits can be gradually reduced through story point expenditure, as detailed in the Character Advancement section. This process represents the character's journey of personal growth and resilience as they work to overcome their flaws and hindrances through in-game experiences.

Positive traits, once established, remain fixed and cannot be modified through story point expenditure. They represent core aspects of a character's identity that define who they are at their foundation.

Note that while skills can be improved without limit, traits can only be modified through specific advancement rules, emphasizing that traits represent deeper, more fundamental aspects of character identity compared to learned skills.

** Trait Examples
:PROPERTIES:
:ID:       B26A7CEE-BE73-4ADF-870C-0858B6FC1795
:END:

Here are some examples of traits. These examples illustrate diverse effects as boosts or hindrances. The Game Master and player should agree on the specific skills a trait affects.

*** Broad Traits

- *Natural Leader*: This trait would grant a bonus to social skills used for leadership, such as *Social (Diplomacy)*, *Social (Command)*, or *Social (Intimidation)*.
- *Photographic Memory*: This trait would provide a bonus to skills that rely on recalling information, such as *Languages*, *Engineering*, *Medicine*, or *Computers*.
- *Absent-Minded*: This trait would impose a penalty on skills that require sustained attention and memory, such as *Perception*, *Investigation*, or *Computers*.
- *Slow Learner*: This trait increases the story point cost for the character to learn new skills. The exact increase in cost is equal to the absolute value of the trait.

*** Narrow Traits

- *Perfect Pitch*: This trait would apply its bonus to any skill related to music, such as *Art (Music Performance)* or *Art (Composition)*.
- *Ambidextrous*: This trait would provide a bonus to skills requiring fine motor skills with either hand, such as *Combat (Melee)*, *Physical (Sleight of Hand)*, or certain *Art* skills.
- *Iron Stomach*: This trait would grant a bonus to any skill checks made to resist the effects of poison, disease, or other ingested maladies, likely falling under the *Physical (Constitution)* skill.

*** Situational Traits

- *Colorblindness*: This trait would apply its penalty to skills where color perception is important, such as *Art (Painting)*, *Survival (Wilderness)* for identifying plants, or *Perception (Visual)* in certain situations.
- *Claustrophobia*: This trait imposes a penalty on all skill checks when the character is in a confined space, as determined by the Game Master.
- *Night Blindness*: This trait would apply a penalty to all perception and combat skills when in low-light conditions.
* Items
:PROPERTIES:
:ID:       7D4E1F2A-8C3B-4D1E-9A2B-5C8D7E3F9A1B
:END:

#+ATTR_HTML: :class section-icon
[[file:items.svg]]

** Character Inventory
:PROPERTIES:
:ID:       290B9FE6-7BE7-4FBE-814C-CE965C3D5E07
:END:

Characters in OpenAxiom have a simple inventory system. Your best strength-related skill determines the number of inventory slots you have available to carry items. Strength-related skills include *Physical (Strength)*, *Physical (Endurance)*, and any other skills that the Game Master deems appropriate for determining carrying capacity.

Items are categorized into four size classes that determine how they consume inventory slots:

- *Small*: These items can be fit two per inventory slot (e.g., a dagger, a book, a small tool).
- *Medium*: These items require one inventory slot (e.g., a sword, a backpack, a rope).
- *Large*: These items require two inventory slots (e.g., a suit of armor, a large weapon, a chest).
- *Extra Large*: These items require multiple players to carry, with each participant using all of their open slots for the duration (e.g., a canoe, a large piece of furniture, a heavy statue).

Other than these size and slot requirements, inventory is very simple. Players can organize their items however they see fit, and the Game Master should generally not concern themselves with tracking exact weights or volumes. The focus is on narrative gameplay rather than detailed inventory management.

Items that are particularly large, bulky, or numerous may require special consideration from the Game Master, but in general, players should be able to carry a reasonable amount of equipment based on their character's physical capabilities.

** Character Creation
:PROPERTIES:
:ID:       13D011F3-1ADC-419C-8918-869AE4B302EB
:END:

 During character creation, characters start with all items required by their skills, plus any worldbuilding or lore items they want, as long as those don't confer a mechanical advantage.

** How Items Affect Characters
:PROPERTIES:
:ID:       8E5F2G3B-9D4C-5E2F-0A3B-6D9E8F4G0A2C
:END:

The way items affect characters falls into one of three categories, with an additional modifier for situational items:

*** Skill Checks in a Box
The most basic types of items are "skill checks in a box." These items list one or more *specific* (not general) skills that they grant automatic successes to. This could include beers for *Social (Diplomacy)* checks in casual settings, bedding for *Survival (Wilderness)* checks to set up camp, or binoculars for *Perception (Visual)* checks to spot distant objects. When a character possesses such an item and attempts a relevant skill check, they automatically succeed without rolling dice.

#+ATTR_HTML: :class trait-definition
| Quality Binoculars | Skill Check in a Box |
|--------------------+----------------------|
| Skills Affected    | Perception (Visual)  |

*** Skill Prerequisite Items
The next level of complexity includes skill prerequisite items. These items are specified as required by a skill to perform that skill effectively. This is usually specified in resource packs, but the ultimate decision is up to the GM. For example, a lockpick set might be required for *Physical (Lockpicking)* checks, or a computer might be required for *Computers (Hacking)* checks. Without these prerequisite items, characters are fully unable to attempt certain skill checks.

#+ATTR_HTML: :class trait-definition
| Professional Lockpick Set | Prerequisite |
|---------------------------|--------------|
| Required For              | Physical (Lockpicking) |

*** Special Items
Finally, there are Special items; much like Special traits, Special items introduce new rules that may include modifying dice outcomes or providing or removing penalties. These items add unique mechanical effects that go beyond simple skill bonuses. Examples might include a lucky charm that allows rerolling failed checks, or a suit of armor that reduces harm tracker penalties. As with Special traits, Game Masters should be cautious about introducing custom Special items, as they can significantly affect game balance.

#+ATTR_HTML: :class trait-definition
| Lucky Charm | Special |
|-------------|---------|
| Skills Affected              | All skills |
| Effect                       | Once per session, the character may reroll any failed skill check. |

Other than these officially published Special items, Game Masters should be cautious about introducing custom Special items, as they can significantly affect game balance.

*** Situational Items
Any item can be Situational, similar to traits, in which case their effects only apply under certain conditions defined by the item's description. For example, a raincoat would only provide its benefits in wet weather, or night vision goggles would only function in low-light conditions. The Game Master determines when situational items activate based on the narrative circumstances. A situational item can be any one of the other three types, so the specification of the type in that case is a comma separated list. The format of an item card for a situational item is the same as the format for the item card of the type it is, plus the "situation" row.

#+ATTR_HTML: :class trait-definition
| Night Vision Goggles | Situational, Skill Check in a Box |
|----------------------|-----------------------------------|
| Skills Affected              | Perception (Visual) |
| Situation                    | Only functions in low-light conditions. |

*** Lore Items

Lore items are usually Small in size, at max Medium, and don't convey any mechanical advantage. They simply represent items the character should have for their backstory. These are represented in-game only so that it's easier to keep track of them if they're stolen, and to avoid absurd inventories full of lore items.

* Character Creation Examples
:PROPERTIES:
:ID:       BC1D075E-1940-4E0F-8974-7FD8669FFB28
:END:

** Fantasy Example: Elara, the Forest Hunter and Tracker
:PROPERTIES:
:ID:       4EFD166D-4325-44C8-B8B2-7C6872F61E7D
:END:

#+BEGIN_QUOTE
A player wants to create a fantasy character named Elara. The player envisions Elara as a nimble hunter and tracker from a secluded forest village.

First, the player writes Elara's biography. For Appearance, the player describes Elara as "lithe and quick, with sharp eyes and practical leather clothing suited for the forest." For History, the player writes, "Elara grew up in a reclusive elven community in a deep forest. She was trained as a hunter and tracker, protecting her village from woodland dangers. She has recently left her home to explore the wider world."

Next, the player chooses five skills, giving each a +1 bonus. The default for all skills is 9, so each of these skills will have a value of 10.
- *Combat (Ranged) (Bow)*: Justification: "Elara was trained with the bow to hunt and to defend her village."
- *Survival (Wilderness) (Forest)*: Justification: "Her entire life has been spent living and hunting in the forest."
- *Physical (Tracking)*: Justification: "As a hunter and tracker, she learned to follow trails and find her quarry."
- *Languages (Elven)*: Justification: "This is her native tongue from her reclusive community."
- *Physical (Acrobatics)*: Justification: "She is naturally agile and trained to move swiftly through the dense forest canopy."

During character creation, Elara also receives items appropriate to her skills and background. Her best strength-related skill is *Physical (Acrobatics)* at 10, giving her 10 inventory slots.
- *Elven Composite Bow*: A Medium item that is required for her *Combat (Ranged) (Bow)* skill. Without it, she cannot make bow attacks.
- *Leather Armor*: A Medium item that provides protection but doesn't confer mechanical advantages in the core rules.
- *Hunting Knife*: A Small item that could be used for close combat or utility tasks.
- *Bedroll and Camping Supplies*: A Medium item that allows automatic success on *Survival (Wilderness)* checks for setting up camp.
- *Herbalism Kit*: A Medium item that aids in identifying plants and treating minor wounds, granting automatic success on certain *Survival (Wilderness)* checks.
- *Elven Rations*: Several Small items to sustain her during her travels.
- *Forest Cloak*: A Medium item that helps with stealth in woodland environments, providing automatic success on certain *Physical (Stealth)* checks when in forests.

Finally, the player selects traits. The player chooses up to three positive traits and up to three negative traits, ensuring the total value of positive traits equals the absolute value of negative traits.
- The player chooses the positive trait *Night Vision* and decides to give it a value of +3.

  This trait will grant a +3 bonus to perception-based skills like *Physical (Tracking)* in low-light conditions, making its effective value 13 in those situations.

  Justification: "Her elven heritage and life in the dim forest have given her excellent sight in low light."
- The player adds another positive trait, *Ambidextrous*, with a value = +2.

  This trait will grant a +2 bonus to skills requiring manual dexterity, such as *Combat (Ranged) (Bow)*, making that skill's effective value 12.

  Justification: "Her combat training emphasized versatility, making her adept with either hand."
- To maintain balance, the player chooses the negative trait *Claustrophobia* and gives it a value of -5.

  This trait will impose a -5 penalty on all skill checks when Elara is in a confined space.

  Justification: "Having spent her life in the open wilderness, she is unnerved and distracted in confined spaces."

The positive traits sum to +5 (+3 + +2) and the negative trait sums to -5, creating a balanced character. She has two positive traits and one negative trait, which is within the allowed limits. The Game Master approves the justifications, and Elara is ready to play.
#+END_QUOTE

** Science Fiction Example: Jax, the Freelance Engineer
:PROPERTIES:
:ID:       C63E0526-9D02-4402-AB77-0888DF0A4F72
:END:

#+BEGIN_QUOTE
Another player decides to create a science fiction character, a street-smart engineer named Jax.

The player starts with the biography. For Appearance, Jax is "a tall, wiry man with a cybernetic implant replacing his left eye. He wears a worn, grease-stained mechanic's jumpsuit." For History, the player writes, "Jax is a former corporate engineer who grew disillusioned with the megacorporations. He now lives in the underbelly of a sprawling metropolis, working as a freelance mechanic and information broker."

With the biography established, the player selects five skills for a +1 bonus, bringing their value to 10.
- *Engineering (Robotics)*: Justification: "He was a robotics engineer for a major corporation."
- *Computers (Hacking)*: Justification: "As an information broker, he often needs to access secure systems."
- *Social (Streetwise)*: Justification: "He has learned to navigate the complex social landscape of the city's underworld."
- *Piloting (Starship) (Freighter)*: Justification: "He owns and operates a small, customized freighter for various jobs."
- *Combat (Ranged) (Pistol)*: Justification: "Living in the underbelly requires the ability to defend oneself."

During character creation, Jax also receives items appropriate to his skills and background. His best strength-related skill is likely *Physical (Strength)* at 9, giving him 9 inventory slots.
- *Cybernetic Eye Implant*: A Lore item associated with his *Photographic Memory* trait. This is a permanent part of his body that doesn't count against his inventory slots.
- *Multi-tool Kit*: A Medium item required for many *Engineering* checks, allowing him to work on various mechanical devices.
- *Portable Computer*: A Medium item that is required for his *Computers (Hacking)* skill. Without it, he cannot attempt hacking checks.
- *Holdout Pistol*: A Small item that is required for his *Combat (Ranged) (Pistol)* skill.
- *Tech Repair Kit*: A Medium item that provides automatic success on certain *Engineering* checks for routine maintenance.
- *Street Clothes*: A Medium item that doesn't confer mechanical advantages but fits his background.
- *Data Storage Device*: A Small item for storing large amounts of information he's collected.
- *Emergency Rations*: Several Small items for survival during extended jobs.

Now, the player moves to traits, selecting up to three positive traits and up to three negative traits with a balanced total value.
- The player chooses the positive trait *Photographic Memory* and gives it a value of +5.

  This will grant a +5 bonus to his knowledge-based skills like *Engineering (Robotics)* and *Computers (Hacking)*, making their effective value 15 for tasks involving memory.

  Justification: "His cybernetic eye implant allows him to perfectly recall technical schematics and information."
- The player chooses the negative trait *Absent-Minded* and gives it a value of -3.

  This will impose a -3 penalty on perception and attention-based skills.

  For example, when trying to spot a detail in a system he is hacking, his *Computers (Hacking)* skill would have an effective value of 12 (15 - 3). Note that this penalty applies to all skills affected by *Absent-Minded*, not just *Computers (Hacking)*.

  Justification: "The constant stream of data from his implant sometimes causes him to forget mundane details."
- The player adds another negative trait, *Slow Learner*, with a value of -2.

  This will increase the story point cost for him to learn new skills.

  Justification: "He is highly specialized and struggles to learn new skills outside of his established expertise."

The positive traits sum to +5 and the negative traits sum to -5 (-3 + -2), creating a balanced character. He has one positive trait and two negative traits. The Game Master reviews the justifications and approves them. Jax is now ready for the game.
#+END_QUOTE

* Character Status Effects
:PROPERTIES:
:ID:       3F2D8E7A-2B4C-4D6E-8A1B-C5E7F9A0B2D5
:END:

#+ATTR_HTML: :class section-icon
[[file:status_effects.svg]]

Characters in OpenAxiom face various forms of harm during their adventures. To track this, every character has three separate harm trackers that represent different aspects of a character's well-being.

** Types of Harm Trackers
:PROPERTIES:
:ID:       4A99F8FE-E991-41F1-B11B-10FEDE10E58C
:END:

*** Physical Harm
A character with physical harm suffers penalties to skills requiring bodily coordination, strength, or endurance. The Physical tracker tracks wounds, poison, fatigue, and bodily injury.

Affected General Skills:
- *Combat* (all specializations)
- *Physical* (all specializations: Strength, Acrobatics, Stealth, etc.)
- *Piloting* (all specializations)
- *Survival* (all specializations)
- Any other skills requiring physical exertion or coordination

*** Mental Harm
A character with mental harm suffers penalties to skills requiring concentration, memory, or cognitive processing. The Mental tracker tracks fear, confusion, stress, and psychic damage.

Affected General Skills:
- *Computers* (all specializations)
- *Investigation*
- *Perception*
- *Engineering* (all specializations)
- *Medicine* (all specializations)
- Any other skills requiring focused mental effort or problem-solving

*** Social Harm
A character with social harm suffers penalties to skills requiring interpersonal interaction, emotional control, or social awareness. The Social tracker tracks humiliation, loss of face, damaged reputation, and shaken confidence.

Affected General Skills:
- *Social* (all specializations: Diplomacy, Deception, Intimidation, etc.)
- *Languages* (when used in social contexts)
- *Art* (Performance)
- *Streetwise*
- Any other skills requiring social interaction or emotional stability

** Harm Tracker Levels and Penalties
:PROPERTIES:
:ID:       55FD61CB-8CA3-4905-BEA6-FB214FB678A7
:END:

Each harm tracker progresses through four distinct levels, with corresponding penalties:

- *Hindered (Level 1)*: The character experiences minor difficulties that affect their performance. Applies a -1 penalty to all affected skills.
- *Impaired (Level 2)*: The character suffers noticeable setbacks that significantly impact their capabilities. Applies a -2 penalty to all affected skills.
- *Wrecked (Level 3)*: The character endures severe trauma that gravely hampers their effectiveness. Applies a -3 penalty to all affected skills.
- *Incapacitated (Level 4)*: The character is completely unable to function and must sit out the scene. The character cannot take actions requiring that type of effort.

When a harm tracker applies a penalty to a general skill, it also applies to any more specific sub-skills under that general skill. For example, if Physical harm affects *Combat*, it also affects *Combat (Melee)* and *Combat (Ranged)*.

*** Least Harmed Principle
When a skill could fall under multiple harm trackers, by default the harm tracker that is *least* harmed is the one the skill is treated as falling under, but the decision is ultimately up to the GM.

This principle represents how characters compensate for their wounds by leaning more heavily on their other capabilities to still execute a skill. For instance, a character might use *Social (Streetwise)* to physically intimidate a foe or to mentally recall the layout of a gang's territory, depending on if they are more mentally or physically harmed, respectively. This mechanic reflects the adaptability of characters as they work around their limitations.

Examples of skills that might fall under multiple harm trackers include:
- *Social (Streetwise)*: Can be used for physical intimidation (Physical) or recalling territorial knowledge (Mental)
- *Physical (Acrobatics)*: Might be used in social performance (Social) or to mentally calculate trajectories (Mental)
- *Combat (Melee)*: Could involve social intimidation (Social) or mental tactical planning (Mental)
- *Art (Performance)*: May require physical dexterity (Physical), mental memorization (Mental), or social engagement (Social)
- *Survival (Tracking)*: Can involve physical stamina (Physical), mental pattern recognition (Mental), or social knowledge of local customs (Social)

** Managing Harm
:PROPERTIES:
:ID:       3758B8E3-641F-4F4C-95C0-360F7746C2A6
:END:

Harm is typically inflicted by the Game Master as a result of failed rolls, environmental hazards, or narrative consequences. There are two primary methods for recovery from harm:

1. *Rest*: A character can reduce one harm tracker by one level whenever they get adequate long rest and recuperation, allowing their body, mind, or social standing to heal naturally.

2. *Skill Development*: When a character spends story points to improve a skill that falls under a particular harm tracker, they can also reduce that harm tracker by one level. This represents the character's growing mastery and resilience in that area of their life. This recovery is a free benefit earned by reaffirming one's capabilities.

* Character Advancement
:PROPERTIES:
:ID:       3E8F0950-E9F7-446D-8CE0-6D46180FE97A
:END:

#+ATTR_HTML: :class section-icon
[[file:advancement.svg]]

As characters face trials and adventures, they grow and change. OpenAxiom represents this evolution through Story Points. These points are earned through narrative milestones and can be spent to improve skills, overcome flaws, or even gain new innate talents. This system ensures that character growth is tied directly to the story, rewarding players for engaging with the game world and their character's journey.



** Earning Story Points
:PROPERTIES:
:ID:       AF570268-568D-4D73-9E99-CBAA976DE173
:END:

Story points are awarded by the Game Master at the conclusion of significant plot beats or story moments. These moments might include:
- Completing a major quest or mission
- Overcoming a significant challenge or adversary
- Making a crucial discovery that advances the narrative
- Resolving a personal character conflict or subplot
- Contributing significantly to a group's success

The number of story points awarded depends on the importance and difficulty of the accomplished plot beat. A minor milestone might earn 1-2 story points, while a major achievement could earn 5 or more. The Game Master has full discretion in determining both when story points are awarded and how many to give.

As a general guideline, players should expect to receive 3-6 story points per typical game session, depending on the pacing of the story and the number of significant accomplishments. This pace allows for steady character development while maintaining the value of story points as meaningful rewards.

** Spending Story Points
:PROPERTIES:
:ID:       CCFD0022-F45D-4BFB-85DD-623CFBF0914F
:END:

Story points can be saved and accumulated over multiple sessions. They do not need to be spent immediately when awarded. Players can choose when to spend their accumulated story points, allowing them to save up for more significant improvements. Players have three options for spending their story points:

*** Improving Existing Skills

#+ATTR_HTML: :class section-icon
[[file:improving_skills.svg]]

Any amount of story points can be applied to skills the character already has. Increasing a skill's value requires more story points as the skill becomes more proficient. Each improvement follows a simple step progression: the first time a skill is improved (when it's initially unlocked) costs 1 story point, the second improvement costs 2 story points, the third costs 3 story points, and so on.

The formula for determining the cost to improve a skill to the next level is: next level cost = new value - 9

| Skill Value | Cost From Previous |
|-------------+--------------------|
|          10 | 1 point (already paid during character creation or skill unlocking) |
|          11 | 2 points           |
|          12 | 3 points           |
|          13 | 4 points           |
|          14 | 5 points           |
|          15 | 6 points           |
|          16 | 7 points           |
|          17 | 8 points           |
|          18 | 9 points           |

This is the primary method for making existing capabilities more powerful.

Reaching the pinnacle of skill mastery is an extraordinary feat. A character starting with a skill at the default "unlocked" level of 10 would need to spend a total of 44 story points to advance that skill all the way to 18 (Legendary). This represents a significant investment of time and effort, as characters typically earn only 3-6 story points per session. It would take roughly 7-15 sessions of maximum story point earnings to reach Legendary status in a single skill, reinforcing that true mastery requires tremendous dedication and perseverance.

#+BEGIN_EXPORT html
<img src="skill_progression.svg" alt="Skill Progression Graph" />
#+END_EXPORT

*** Signature Abilities

#+ATTR_HTML: :class section-icon
[[file:signature_ability.svg]]

Once a skill reaches 18 (ignoring any trait bonuses), players have the option to spend additional story points to continue improving that skill. However, they are *strongly encouraged* to instead spend all story points in their bank to acquire a "Signature Ability" that they negotiate with the Game Master. These Signature Abilities represent the character's unique mastery and personal style with a skill, going beyond mere numerical improvement.

Signature Abilities must fall into one of three categories:

*** Category 1: Exemptions (Bending the Rules)

An Exemption allows a character to ignore a specific penalty or limitation. They don't give bonuses; they remove negatives.

#+BEGIN_QUOTE
Example (Jax, Computers): Signature Ability: *Predictive Algorithm*. When making a Computers (Hacking) check against a system with advanced security (a negative difficulty modifier), you reduce the penalty by 1. A -2 modifier becomes a -1.
#+END_QUOTE

#+BEGIN_QUOTE
Example (Elara, Survival): Signature Ability: *At Home in the Wild*. You no longer suffer penalties from the Physical Harm tracker when performing any Survival (Wilderness) checks.
#+END_QUOTE

*** Category 2: Maneuvers (New Ways to Use Skills)

A Maneuver grants a character a new, specific action they can perform with the skill, often by interacting with another game system.

#+BEGIN_QUOTE
Example (Elara, Combat (Ranged) (Bow)): Signature Ability: *Pinning Shot*. As your action, you may make a standard Combat (Ranged) (Bow) check to pin an enemy to a nearby surface (a wall, the floor). If you succeed, the enemy cannot move from their spot until they use their own action to make a Physical (Strength) check to free themselves.
#+END_QUOTE

#+BEGIN_QUOTE
Example (Jax, Engineering): Signature Ability: *Jury-Rig*. You can temporarily repair a damaged item without the proper tools, forgoing the "Prerequisite Item" requirement for one check. The item breaks again after the scene.
#+END_QUOTE

*** Category 3: Triggers (Interacting with Resources)

A Trigger allows a character to spend a resource (like Momentum) to create a special effect related to their skill.

#+BEGIN_QUOTE
Example (Jax, Social): Signature Ability: *Fast Talk*. When you succeed on a Social (Deception) check, you may immediately spend your Momentum to ask the GM for one piece of useful (but not necessarily secret) information the target knows.
#+END_QUOTE

#+BEGIN_QUOTE
Example (Elara, Physical): Signature Ability: *Unflinching Poise*. When you would take Harm from a source you can see, you may spend your Momentum to reduce the amount of Harm taken by one level.
#+END_QUOTE

The custom rules they allow *must* fall into these categories. This ensures that Signature Abilities enhance the character's capabilities in meaningful ways that go beyond simple numerical bonuses, creating unique and memorable character moments that reflect their personal mastery of their chosen skills.

The graph below shows how a character's success rate increases over time when spending 3 story points per session to improve a skill (with story point accumulation):


*** Unlocking New Skills

#+ATTR_HTML: :class section-icon
[[file:unlocking_skills.svg]]

One story point can be spent to unlock a new skill. This immediately grants the skill a +1 bonus to its proficiency value, just like during character creation. Any remaining story points from that award cannot be spent on the same skill - they must be used on other options. This represents the character learning a new area of expertise, similar to how skills are chosen during character creation.

Characters can have specific skills without having the more general version. For example, a character can unlock *Piloting (Starship)* without having *Piloting*. When a character has a specific skill but not its more general version, they can only use that specific skill for tasks that match it exactly. They cannot use it as a substitute for other specializations of the same general skill.

If a player wants to unlock a more specific skill for a more general skill they already have, that specific skill starts at a +2 advantage, because knowledge is transferrable. For example, a character with *Piloting* at +1 who wants to unlock *Piloting (Starship)* would start with a +3 bonus (+1 from the unlock +2 from the transferable knowledge).

*** Overcoming Negative Traits

#+ATTR_HTML: :class section-icon
[[file:overcoming_traits.svg]]

Traits represent a character's inherent nature and are fundamentally different from trained skills. Altering them is a rare and monumental process tied directly to the character's story.

Overcoming an ingrained flaw is a long and difficult process of personal growth and resilience. This is represented by gradually eroding the trait's power. Thus, characters may improve negative traits over time by spending story points. Any negative trait can be reduced by exactly one point at a time, with the character spending story points equal to the trait's current value to decrease it by one point.

For example, a character with a -5 trait must spend 5 story points to reduce it to -4. Later, they would need to spend 4 story points to reduce it to -3, and so on, until the trait eventually reaches 0 and is removed entirely.

This system represents gradual character growth as players work to overcome their character's flaws and hindrances through in-game experiences. Traits can only be improved in this incremental fashion and cannot be removed entirely in a single expenditure of story points.

Note that existing positive traits are fixed and cannot be modified through story point expenditure. Only negative traits can be reduced or overcome.

*** Gaining Positive Traits

#+ATTR_HTML: :class section-icon
[[file:gaining_traits.svg]]

Gaining a new innate positive trait is a profound and permanent change to a character. This transformation requires extraordinary performance and calculated risk.

The process has three steps:

1. *Precondition*: A character may only attempt to gain a new positive trait if they have scored a critical success during a pivotal story moment. A critical success is a roll of 3 or 4 on 3d6. The game master determines what constitutes a pivotal story moment. This opportunity must be claimed when story points are next awarded.

2. *Attempt*: To attempt the transformation, the player must declare they are making a Crucible Roll. They must then commit all story points from the current award to the attempt. This investment has two parts:

   - The Potential: The maximum value of the new trait equals the points spent, up to a maximum of +5.

   - The Ante: Any story points spent beyond 5 are lost. They are the price paid for the chance to change.

   Example: A player is awarded 8 story points. They /must/ spend all 8 points to attempt the Crucible Roll. The maximum trait they can gain is +5. The extra 3 points are lost in the process, regardless of the outcome.

3. *Outcome*: After spending the points, the player names their desired trait and makes the Crucible Roll (3d6). The outcome depends on the result.

| Roll Result       | Outcome                                                                                                                                                        |
|-------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Success (5 - 16)  | Success. The character's focus pays off. They gain the new positive trait at the full value of the points invested up to +5.                                 |
| Critical Success (3-4) | Transcendence. An incredible breakthrough! They gain the new positive trait at its full value, plus an additional +1 bonus, giving them a truly superhuman trait. |
| Critical Failure (17-18) | Backlash. The attempt fails catastrophically, scarring the character. The positive trait is not gained. Instead, they gain a new, permanent negative trait with a fixed value of -3. This trait should be narratively linked to the failed attempt (e.g., trying for Deadeye might result in Nerve Jitters). |

** Advancement Examples
:PROPERTIES:
:ID:       85B84067-FCF5-42B0-8250-1A3DF239D57C
:END:

#+ATTR_HTML: :class gameplay-example
#+BEGIN_QUOTE
After a successful mission to recover a stolen prototype, Elara's player is awarded 4 story points. The player decides to spend them as follows:

1. 2 story points to improve her *Survival (Wilderness) (Forest)* skill from 10 to 11 (second improvement)
2. 1 story point to unlock the *Perception (Visual)* skill, immediately granting it a +1 bonus (default 9 + 1 = 10)
3. 1 story points to unlock *Combat (Melee) (Dagger)*, because earlier in the campaign she was caught in a fight where it was too close range to use a bow, and she almost died.

Later, after facing her claustrophobia while navigating a tight tunnel system (but still struggling), Elara's player is awarded 6 story points by the Game Master. The player chooses to spend all 6 story points to reduce the *Claustrophobia* trait from -6 to -5, reflecting Elara's gradual improvement in overcoming this hindrance.
#+END_QUOTE

#+ATTR_HTML: :class gameplay-example
#+BEGIN_QUOTE
Jax's player is awarded 3 story points after successfully hacking a corporate mainframe. The player decides to:

1. Spend 1 story point to unlock the *Social (Deception)* skill, immediately granting it a +1 bonus (default 9 + 1 = 10)
2. Spend 2 story points to improve his *Computers (Hacking)* skill from 10 to 11 (second improvement)

In a much later session, Jax's player earns 5 story points for overcoming his absent-mindedness during a critical mission. The player chooses to spend all 5 story points to reduce his *Absent-Minded* trait from -5 to -4, showing his gradual improvement in focus and attention.

In an even later session, during a pivotal moment when Jax successfully repairs a damaged starship while under enemy fire (scoring a critical success on a 3d6 roll), his player earns 7 story points. The player declares a Crucible Roll, spending all 7 points in an attempt to gain the *Cool Under Pressure* trait. After naming the trait, the player rolls 3d6 and gets a result of 12 - a standard success. Jax gains the *Cool Under Pressure* trait at +5, the maximum value of the points invested, reflecting his newfound ability to remain calm in dangerous situations.

In a subsequent session, Jax attempts another Crucible Roll after earning 5 story points for an incredible feat of engineering that he also got a critical success on. The player spends all 5 points to attempt to gain the *Intuitive Interface* trait. The player rolls 3d6 and gets a result of 4 - a critical success! Jax gains the *Intuitive Interface* trait at +6 (the maximum of 5 plus the +1 bonus for a critical success).
#+END_QUOTE
